pipeline {
	agent {label 'slave-linux'}

	environment {
		TEST_ENV = "ppe"
		TEST_LANGUAGE= "${params.TestLanguage}"
		TEST_COUNTRY= "${params.TestCountry}"
		TEST_WEB= "${params.TestWeb}"
		TEST_RESULT = "FAILED"
    }

    parameters {
        string (
            name: 'TestBranch',
            defaultValue: "develop",
            description: 'please fill your test branch',
        )
        string (
            name: 'TestLanguage',
            defaultValue: "th",
            description: 'to define language when accessing the website',
        )
        string (
            name: 'TestCountry',
            defaultValue: "th",
            description: 'to define country when accessing the website',
        )
        choice (
            name: 'TestWeb',
            choices: ['*', 'web'],
            description: 'to define feature web type when testing',
        )
    }

    stages {

        stage("pull scm test") {
            steps {
            checkout([$class: 'GitSCM',
            branches: [[name: "${params.TestBranch}"]],
            doGenerateSubmoduleConfigurations: false,
            extensions: [[$class: 'CloneOption', timeout: 120]],
            submoduleCfg: [],
             userRemoteConfigs: [[credentialsId: "${GITLAB_CRED}", url: "${GITLAB_EAPI}/qa/varinthorn-test.git"]]
        ])}}

        stage ('Activate Virtual Env')
        {
            steps {
                sh '''
                    sudo pip3 install virtualenv
                    virtualenv env
                    source env/bin/activate
                '''
            }
        }
        stage ('Prepare Library')
        {
            steps {
                sh '''
                    sudo pip3 install -r requirements.txt
                '''
            }
        }

        stage ('Run Regression Test')
        {
            steps {
                    echo "Deploying with param ${TEST_WEB}"
                sh '''
                    robot -d result_${BUILD_NUMBER} -x result -v ENV:${TEST_ENV} -v LANG:${TEST_LANGUAGE} -v COUNTRY:${TEST_COUNTRY} -i regression ./testcases/${TEST_WEB}
                '''
                script {
						TEST_RESULT = "SUCCESS"
					}
            }
			post {
				always {
					script {
					  step(
							[
							  $class              : 'RobotPublisher',
							  outputPath          : "result_${BUILD_NUMBER}",
							  outputFileName      : 'output.xml',
							  reportFileName      : 'report.html',
							  logFileName         : 'log.html',
							  disableArchiveOutput: false,
							  passThreshold       : 100,
							  unstableThreshold   : 90,
							  otherFiles          : "*.png,*.jpg",
							]
						)
					}

				}
				failure {
					script {
						TEST_RESULT = "FAILED"
					}
				}
			}
        }
    }
}